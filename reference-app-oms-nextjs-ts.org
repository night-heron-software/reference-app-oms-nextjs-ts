#+TITLE:  Tempororal OMS Reference App Typescript
#+AUTHOR: Jeff Romine
#+EMAIL:  jromineut@gmail.com
#+DATE:   2025-05-10 Sat
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+OPTIONS: ^:{} author:nil email:nil creator:nil timestamp:nil
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:
#+LINK_HOME:
#+XSLT:
#+STARTUP: showeverything

* [[https://learn.temporal.io/getting_started/typescript/dev_environment/][Set up a local development environment for Temporal and TypeScript]]

* [[https://learn.temporal.io/getting_started/typescript/hello_world_in_typescript/][Build a Temporal Application from scratch in TypeScript]]

* [[https://learn.temporal.io/tutorials/typescript/build-one-click-order-app-nextjs/][Build a one-click-order application with TypeScript and Next.js]]

** Create Next.js project

#+begin_src shell-script
npx create-next-app@latest reference-app-oms-nextjs-ts
#+end_src

** Node tsconfig

#+begin_src shell-script
npm install --save-dev @tsconfig/node20
#+end_src

** nodemon - for watching for file changes

#+begin_src shell-script
npm install --save-dev nodemon
#+end_src

** temporal packages

#+begin_src shell-script
npm install @temporalio/client @temporalio/worker @temporalio/workflow @temporalio/activity
#+end_src

** temporal directory

#+begin_src shell-script
mkdir -p temporal/src
#+end_src

** temporal/tsconfig.json

#+begin_src json
{
  "extends": "@tsconfig/node20/tsconfig.json",
  "version": "4.4.2",
  "compilerOptions": {
    "declaration": true,
    "declarationMap": true,
    "sourceMap": true,
    "rootDir": "./src",
    "outDir": "./lib"
  },
  "include": ["src/**/*.ts"]
}
#+end_src


** npm-run-all

#+begin_src shell-script
npm install npm-run-all --save-dev
#+end_src


** Initial package.json

#+begin_src json
{
  "name": "reference-app-oms-nextjs-ts",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "next": "15.3.2",
    "react": "^19.0.0",
    "react-dom": "^19.0.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@tailwindcss/postcss": "^4",
    "@tsconfig/node20": "^20.1.5",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "eslint": "^9",
    "eslint-config-next": "15.3.2",
    "nodemon": "^3.1.10",
    "npm-run-all": "^4.1.5",
    "tailwindcss": "^4",
    "typescript": "^5"
  }
}
#+end_src

**** Updated package.json

#+begin_src json
{
  "name": "reference-app-oms-nextjs-ts",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "npm-run-all -l build:temporal --parallel dev:temporal dev:next start:worker",
    "dev:next": "next dev",
    "dev:temporal": "tsc --build --watch ./temporal/tsconfig.json",
    "build:next": "next build",
    "build:temporal": "tsc --build ./temporal/tsconfig.json",
    "start:worker": "nodemon ./temporal/lib/worker",
    "start": "next start",
    "lint": "eslint ."
  },
  "dependencies": {
    "next": "15.3.2",
    "react": "^19.0.0",
    "react-dom": "^19.0.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@tailwindcss/postcss": "^4",
    "@tsconfig/node20": "^20.1.5",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "eslint": "^9",
    "eslint-config-next": "15.3.2",
    "nodemon": "^3.1.10",
    "npm-run-all": "^4.1.5",
    "tailwindcss": "^4",
    "typescript": "^5"
  }
}

#+end_src

* [[https://learn.temporal.io/tutorials/typescript/build-one-click-order-app-nextjs/#define-the-business-logic-using-temporal][Define the business logic using Temporal]]

** temporal/src/activities.ts

#+begin_src typescript
import { activityInfo } from '@temporalio/activity';
export async function purchase(id: string): Promise<string> {
  console.log(`Purchased ${id}!`);
  return activityInfo().activityId;
}
#+end_src


** temporal/src/workflows.ts

#+begin_src typescript
import { proxyActivities, sleep } from '@temporalio/workflow';
import type * as activities from './activities';

const { purchase } = proxyActivities<typeof activities>({
  startToCloseTimeout: '1 minute',
});

export async function oneClickBuy(id: string): Promise<string> {
  const result = await purchase(id); // calling the activity
  await sleep('10 seconds'); // sleep to simulate a longer response.
  console.log(`Activity ID: ${result} executed!`);
  return result;
}
#+end_src

#+begin_quote
Workflows must be deterministic, so you perform non-deterministic work
in Activities. The TypeScript SDK bundles Workflow code and runs it
inside a deterministic sandbox. This sandbox can help detect if you're
using nondeterministic code. This is why you must separate Workflow
code from Activity code, and why you have to use the proxyActivities
function to load your Activity functions instead of directly importing
them. The Activities will be nondeterministic, so you can't run in the
same sandbox as the Workflow code.
#+end_quote

** temporal/src/shared.ts

#+begin_src typescript
export const TASK_QUEUE_NAME = 'ecommerce-oneclick';
#+end_src

** temporal/src/worker.ts

#+begin_src typescript
import { NativeConnection, Worker } from '@temporalio/worker';
import * as activities from './activities';
import { TASK_QUEUE_NAME } from './shared';

run().catch((err) => console.log(err));

async function run() {
  const connection = await NativeConnection.connect({
    address: 'localhost:7233',
    // In production, pass options to configure TLS and other settings.
  });
  try {
    const worker = await Worker.create({
      connection,
      workflowsPath: require.resolve('./workflows'),
      activities,
      taskQueue: TASK_QUEUE_NAME
    });
    await worker.run();
  } finally {
    connection.close();
  }
}
#+end_src

*** check that worker builds and runs

#+begin_src shell-script
npm run build:temporal && npm run start:worker`
#+end_src

** temporal/src/client.ts
#+begin_src typescript
import { Client, Connection } from '@temporalio/client';

const client: Client = makeClient();

function makeClient(): Client {
  const connection = Connection.lazy({
    address: 'localhost:7233',
    // In production, pass options to configure TLS and other settings.
  });
  return new Client({ connection });
}

export function getTemporalClient(): Client {
  return client;
}
#+end_src

#+begin_src shell-script
mkdir -p app/api/startBuy
#+end_src

#+begin_src shell-script
mkdir -p app/api/startBuy
touch app/api/startBuy/route.ts
#+end_src

#+begin_src shell-script
curl -d '{"itemId":"1", "transactionId":"abc124"}' \
     -H "Content-Type: application/json" \
     -X POST http://localhost:3000/api/startBuy
#+end_src

* Temporal OMS

** postgres

#+begin_src shell-script
https://www.npmjs.com/package/@vercel/postgres

#+end_src

** Run reference-app-oms-nextjs-ts


#+begin_src shell-script
temporal server start-dev --db-filename local.db
npm-run-all -l build:temporal --parallel dev:temporal dev:next start:worker
#+end_src

#+begin_src json
{
  "_VOLTA_TOOL_RECURSION": "1",
  "TERM_PROGRAM": "vscode",
  "NODE": "/Users/jeffromine/.volta/tools/image/node/23.7.0/bin/node",
  "INIT_CWD": "/Users/jeffromine/src/learning/temporal/reference-app-oms-nextjs-ts",
  "TERM": "xterm-256color",
  "SHELL": "/bin/zsh",
  "BUN_INSPECT": "ws+unix:///var/folders/gy/hn1zsl6563bd9smq7_6c13kc0000gn/T/275csdm3j7r.sock?wait=1",
  "TMPDIR": "/var/folders/gy/hn1zsl6563bd9smq7_6c13kc0000gn/T/",
  "EMACS_PLUGIN_LAUNCHER": "/Users/jeffromine/.oh-my-zsh/plugins/emacs/emacsclient.sh",
  "npm_config_global_prefix": "/Users/jeffromine/.volta/tools/image/node/23.7.0",
  "TERM_PROGRAM_VERSION": "1.100.2",
  "NODE_OPTIONS": " --require \"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.js\"  --inspect-publish-uid=http",
  "ZDOTDIR": "/Users/jeffromine",
  "VOLTA_HOME": "/Users/jeffromine/.volta",
  "ORIGINAL_XDG_CURRENT_DESKTOP": "undefined",
  "MallocNanoZone": "0",
  "COLOR": "0",
  "SDKMAN_PLATFORM": "darwinx64",
  "npm_config_noproxy": "",
  "ZSH": "/Users/jeffromine/.oh-my-zsh",
  "PNPM_HOME": "/Users/jeffromine/Library/pnpm",
  "npm_config_local_prefix": "/Users/jeffromine/src/learning/temporal/reference-app-oms-nextjs-ts",
  "USER": "jeffromine",
  "LS_COLORS": "di=1;36:ln=35:so=32:pi=33:ex=31:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=30;43",
  "COMMAND_MODE": "unix2003",
  "SDKMAN_CANDIDATES_API": "https://api.sdkman.io/2",
  "npm_config_globalconfig": "/Users/jeffromine/.volta/tools/image/node/23.7.0/etc/npmrc",
  "SSH_AUTH_SOCK": "/private/tmp/com.apple.launchd.2wWLp3FbcI/Listeners",
  "__CF_USER_TEXT_ENCODING": "0x1F5:0x0:0x0",
  "VSCODE_PROFILE_INITIALIZED": "1",
  "npm_execpath": "/Users/jeffromine/.volta/tools/image/npm/11.2.0/bin/npm-cli.js",
  "PAGER": "less",
  "LSCOLORS": "Gxfxcxdxbxegedabagacad",
  "PATH": "/Users/jeffromine/src/learning/temporal/reference-app-oms-nextjs-ts/node_modules/.bin:/Users/jeffromine/src/learning/temporal/node_modules/.bin:/Users/jeffromine/src/learning/node_modules/.bin:/Users/jeffromine/src/node_modules/.bin:/Users/jeffromine/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/Users/jeffromine/.volta/tools/image/npm/11.2.0/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/jeffromine/src/learning/temporal/reference-app-oms-nextjs-ts/node_modules/.bin:/Users/jeffromine/src/learning/temporal/node_modules/.bin:/Users/jeffromine/src/learning/node_modules/.bin:/Users/jeffromine/src/node_modules/.bin:/Users/jeffromine/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/Users/jeffromine/.volta/tools/image/npm/11.2.0/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/jeffromine/.volta/tools/image/npm/11.2.0/bin:/Users/jeffromine/.volta/tools/image/yarn/3.7.0/bin:/Users/jeffromine/.volta/tools/image/node/23.7.0/bin:/Users/jeffromine/.bun/bin:/usr/local/opt/libpq/bin:/Users/jeffromine/google-cloud-sdk/bin:/Users/jeffromine/.volta/bin:/usr/local/opt/postgresql@15/bin:/Library/Frameworks/Python.framework/Versions/3.12/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/Emacs.app/Contents/MacOS/bin-x86_64-10_11:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/usr/local/MacGPG2/bin:/usr/local/share/dotnet:~/.dotnet/tools:/usr/local/go/bin:/Users/jeffromine/.bun/bin:/usr/local/opt/libpq/bin:/Users/jeffromine/google-cloud-sdk/bin:/Users/jeffromine/.volta/bin:/Users/jeffromine/Library/pnpm:/usr/local/opt/postgresql@15/bin:/Users/jeffromine/.sdkman/candidates/maven/current/bin:/Users/jeffromine/.sdkman/candidates/java/current/bin:/Library/Frameworks/Python.framework/Versions/3.12/bin:/Applications/Visual Studio Code.app/Contents/Resources/app/bin:/Users/jeffromine/Library/Application Support/Code/User/globalStorage/github.copilot-chat/debugCommand:/Applications/Visual Studio Code.app/Contents/Resources/app/bin",
  "MAVEN_HOME": "/Users/jeffromine/.sdkman/candidates/maven/current",
  "VSCODE_INSPECTOR_OPTIONS": "{\"inspectorIpc\":\"/var/folders/gy/hn1zsl6563bd9smq7_6c13kc0000gn/T/node-cdp.2251-5569e633-1.sock\",\"deferredMode\":false,\"waitForDebugger\":\"\",\"execPath\":\"/Users/jeffromine/.volta/bin/node\",\"onlyEntrypoint\":false,\"autoAttachMode\":\"always\",\"openerId\":\"d1fe98a029b8fa93fe7b1c87\"}",
  "_": "/Users/jeffromine/.volta/tools/image/node/23.7.0/bin/node",
  "npm_package_json": "/Users/jeffromine/src/learning/temporal/reference-app-oms-nextjs-ts/package.json",
  "__CFBundleIdentifier": "com.microsoft.VSCode",
  "USER_ZDOTDIR": "/Users/jeffromine",
  "npm_config_init_module": "/Users/jeffromine/.npm-init.js",
  "npm_config_userconfig": "/Users/jeffromine/.npmrc",
  "PWD": "/Users/jeffromine/src/learning/temporal/reference-app-oms-nextjs-ts",
  "npm_command": "run-script",
  "JAVA_HOME": "/Users/jeffromine/.sdkman/candidates/java/current",
  "EDITOR": "/Users/jeffromine/.oh-my-zsh/plugins/emacs/emacsclient.sh",
  "npm_lifecycle_event": "start:worker",
  "LANG": "en_US.UTF-8",
  "npm_package_name": "reference-app-oms-nextjs-ts",
  "CLOUDSDK_PYTHON": "/Library/Frameworks/Python.framework/Versions/3.12/bin/python3",
  "BUN_INSPECT_NOTIFY": "unix:///var/folders/gy/hn1zsl6563bd9smq7_6c13kc0000gn/T/3v28nec4szw.sock",
  "XPC_FLAGS": "0x0",
  "VSCODE_GIT_ASKPASS_EXTRA_ARGS": "",
  "BUN_INSPECT_CONNECT_TO": "unix:///var/folders/gy/hn1zsl6563bd9smq7_6c13kc0000gn/T/v9sl6xkcp9.sock",
  "npm_config_npm_version": "11.2.0",
  "npm_config_node_gyp": "/Users/jeffromine/.volta/tools/image/npm/11.2.0/node_modules/node-gyp/bin/node-gyp.js",
  "XPC_SERVICE_NAME": "0",
  "npm_package_version": "0.1.0",
  "VSCODE_INJECTION": "1",
  "SHLVL": "4",
  "HOME": "/Users/jeffromine",
  "VSCODE_GIT_ASKPASS_MAIN": "/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",
  "LOGNAME": "jeffromine",
  "LESS": "-R",
  "npm_config_cache": "/Users/jeffromine/.npm",
  "SDKMAN_DIR": "/Users/jeffromine/.sdkman",
  "npm_lifecycle_script": "node  --watch --env-file=.env.local ./temporal/lib/worker",
  "VSCODE_GIT_IPC_HANDLE": "/var/folders/gy/hn1zsl6563bd9smq7_6c13kc0000gn/T/vscode-git-ae55786291.sock",
  "BUN_INSTALL": "/Users/jeffromine/.bun",
  "npm_config_user_agent": "npm/11.2.0 node/v23.7.0 darwin x64 workspaces/false",
  "VSCODE_GIT_ASKPASS_NODE": "/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",
  "SDKMAN_CANDIDATES_DIR": "/Users/jeffromine/.sdkman/candidates",
  "GIT_ASKPASS": "/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",
  "COLORTERM": "truecolor",
  "npm_config_prefix": "/Users/jeffromine/.volta/tools/image/node/23.7.0",
  "npm_node_execpath": "/Users/jeffromine/.volta/tools/image/node/23.7.0/bin/node",
  "WATCH_REPORT_DEPENDENCIES": "1",
  "DATABASE_URL": "postgres://default:LFrOHQ8iBRh9@ep-muddy-band-a4dr8n83-pooler.us-east-1.aws.neon.tech/verceldb?sslmode=require",
  "DATABASE_URL_UNPOOLED": "postgresql://default:LFrOHQ8iBRh9@ep-muddy-band-a4dr8n83.us-east-1.aws.neon.tech/verceldb?sslmode=require",
  "PGDATABASE": "verceldb",
  "PGHOST": "ep-muddy-band-a4dr8n83-pooler.us-east-1.aws.neon.tech",
  "PGHOST_UNPOOLED": "ep-muddy-band-a4dr8n83.us-east-1.aws.neon.tech",
  "PGPASSWORD": "LFrOHQ8iBRh9",
  "PGUSER": "default",
  "POSTGRES_DATABASE": "verceldb",
  "POSTGRES_HOST": "ep-muddy-band-a4dr8n83-pooler.us-east-1.aws.neon.tech",
  "POSTGRES_PASSWORD": "LFrOHQ8iBRh9",
  "POSTGRES_PRISMA_URL": "postgres://default:LFrOHQ8iBRh9@ep-muddy-band-a4dr8n83-pooler.us-east-1.aws.neon.tech/verceldb?pgbouncer=true&connect_timeout=15&sslmode=require",
  "POSTGRES_URL": "postgres://default:LFrOHQ8iBRh9@ep-muddy-band-a4dr8n83-pooler.us-east-1.aws.neon.tech/verceldb?sslmode=require",
  "POSTGRES_URL_NON_POOLING": "postgres://default:LFrOHQ8iBRh9@ep-muddy-band-a4dr8n83.us-east-1.aws.neon.tech/verceldb?sslmode=require",
  "POSTGRES_URL_NO_SSL": "postgres://default:LFrOHQ8iBRh9@ep-muddy-band-a4dr8n83-pooler.us-east-1.aws.neon.tech/verceldb",
  "POSTGRES_USER": "default",
  "VERCEL_ENV": "development"
}
#+end_src

#+begin_quote

Temporal's Go SDK and TypeScript SDK offer similar functionalities,
but they are tailored to their respective languages'
ecosystems. Here's a breakdown of their equivalents:

- Core Concepts
  - Workflows: Both SDKs allow you to define long-running processes as
    workflows.
  - Activities: Both allow you to define short-lived tasks as
    activities. These are used for operations that can fail or are not
    deterministic.
  - Workers: Both SDKs use workers to execute workflows and
    activities.
  - Client: Both provide a client to interact with the Temporal
    service.

- Go SDK Equivalents in TypeScript SDK
  - time.Now() in Go is replaced by workflow.now() in TypeScript.
  - time.Sleep() in Go is replaced by workflow.sleep() in TypeScript.
  - workflow.Go() in Go is replaced by workflow.startChild() in
    TypeScript.
  - Go's chan is replaced by workflow.channel in TypeScript.
  - Go's select is replaced by workflow.selector in TypeScript.
  - Go's context.Context is replaced by workflow.context in
    TypeScript.
  - Go's slog logging is replaced by workflow.getLogger() in
    TypeScript.
  - Key Differences
  - Deterministic Execution: The TypeScript SDK enforces a
    deterministic execution environment for workflows, meaning that
    external state access and side effects must be done through
    activities.
  - Node.js and DOM APIs: In TypeScript, workflows cannot directly
    import Node.js or DOM APIs.
  - Testing: Both SDKs offer testing frameworks for workflows and
    activities.
  - Language Idioms: Each SDK is designed to align with the idiomatic
    practices of its respective language.
  - Workflow Updates: Both SDKs support workflow updates, allowing
    modifications to running workflows.
  - TypeScript SDK Packages

- The TypeScript SDK is structured into several packages:
  - @temporalio/client: For interacting with the Temporal service.
  - @temporalio/worker: For running workflow and activity workers.
  - @temporalio/workflow: For defining workflows.
  - @temporalio/activity: For defining activities.
  - @temporalio/testing: For testing workflows and activities.


In summary, while both SDKs offer similar core functionality, their
implementation details and idiomatic usage differ to fit the Go and
TypeScript ecosystems. The TypeScript SDK emphasizes deterministic
workflow execution, while the Go SDK leverages Go's concurrency
primitives.
#+end_quote

#+begin_example
Argument of type '{ id: string; orderId: string; productId: string; quantity: number; status: ShipmentStatus; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Omit<Shipment, "createdAt" | "updatedAt" | "status"> & { status: "PENDING"; createdAt: Date; updatedAt: Date; }'.
  Type '{ id: string; orderId: string; productId: string; quantity: number; status: ShipmentStatus; createdAt: Date; updatedAt: Date; }' is not assignable to type '{ status: "PENDING"; createdAt: Date; updatedAt: Date; }'.
    Types of property 'status' are incompatible.
      Type 'ShipmentStatus' is not assignable to type '"PENDING"'.
        Type '"SHIPPED"' is not assignable to type '"PENDING"'.ts(2345)
#+end_example

#+begin_src json
{
  id: string;
  orderId: string;
  productId: string;
  quantity: number;
  status: ShipmentStatus;
  createdAt: Date;
  updatedAt: Date;
}

Omit<Shipment, "createdAt" | "updatedAt" | "status"> &

{
  status: "PENDING";
  createdAt: Date;
  updatedAt: Date;
}

{
  id: string; // Corresponds to ShipmentID in Go
  orderId: string;
  productId: string;
  quantity: number;
  status: ShipmentStatus;
  createdAt: Date; // Mapped from Go's time.Time
  updatedAt: Date; // Mapped from Go's time.Time
}
#+end_src

#+begin_src shell-script
temporal workflow signal \
         --workflow-id 'A1-1749674719128' \
         --name 'ShipmentStatusUpdated' \
         --input '{"shipmentId": "A1-1749674719128", "status": "shipped", "updatedAt": "2025-06-11T20:57:07.939Z"}'
#+end_src


* Walkthrough Notes

**


#+begin_src shell-script
temporal workflow signal \
         --workflow-id 'ship-A1-1750460272989:1' \
         --name 'ShipmentCarrierUpdateSignalName' \
         --input '{"status":"delivered"}'

#+end_src

#+begin_src shell-script
temporal workflow signal \
         --workflow-id 'ship-A2-1750468019881:1' \
         --name 'ShipmentCarrierUpdateSignalName' \
         --input '{"status":"delivered"}'
#+end_src

#+begin_src shell-script
temporal workflow signal \
         --workflow-id 'ship-A2-1750468019881:2' \
         --name 'ShipmentCarrierUpdateSignalName' \
         --input '{"status":"delivered"}'
#+end_src

#+begin_src html
<script lang="ts">
  import Card from '$lib/components/Card.svelte';
  import Button from '$lib/components/Button.svelte';
  import Heading from '$lib/components/Heading.svelte';
  import ItemDetails from '$lib/components/ItemDetails.svelte';
  import ShipmentProgress from '$lib/components/ShipmentProgress.svelte';
  import type { Shipment } from '$lib/types/order';

  let { data } = $props();
  let shipment: Shipment = $derived(data.shipment);
  let status = $derived(shipment?.status);
  let broadcaster: BroadcastChannel;

  $effect(() => {
  if (shipment?.id && !broadcaster) {
  broadcaster = new BroadcastChannel(`shipment-${shipment.id}`);
  broadcaster?.addEventListener('message', (event) => {
  status = event.data;
  });
  }
  });

  const dispatchShipment = async (shipment: Shipment) => {
  const signal = { name: 'ShipmentUpdate', status: 'dispatched' };
  await fetch('/api/shipment', { method: 'POST', body: JSON.stringify({ shipment, signal }) });
  status = 'dispatched';
  broadcaster?.postMessage(status);
  };

  const deliverShipment = async (shipment: Shipment) => {
  const signal = { name: 'ShipmentUpdate', status: 'delivered' };
  await fetch('/api/shipment', { method: 'POST', body: JSON.stringify({ shipment, signal }) });
  status = 'delivered';
  broadcaster?.postMessage(status);
  };
</script>

<Card>
  <div class="w-full flex flex-col gap-2">
    <div class="flex flex-col md:flex-row items-center justify-between gap-2 w-full">
      <Heading>{shipment.id}</Heading>
      <ShipmentProgress {status} />
    </div>
    <ItemDetails items={shipment.items} />
  </div>
  {#snippet actionButtons()}
  <Button disabled={status !== 'booked'} onClick={() => dispatchShipment(shipment)}>
    Dispatch
  </Button>
  <Button disabled={status !== 'dispatched'} onClick={() => deliverShipment(shipment)}>
    Deliver
  </Button>
  {/snippet}
</Card>

#+end_src
#+begin_example

Jeff Romine
how do i trigger a refresh on this page when dispatchShipment is called?


Gemini
Of course! To trigger a refresh on the page after an action like dispatchShipment, you can re-fetch the data from your server and update the component's state.

Given your current setup using a Client Component ('use client') that fetches its own data within useEffect, the most direct approach is to create a reusable function to fetch the shipment data. You can then call this function on the initial page load and again after your dispatchShipment or deliverShipment actions have completed.

Here is how you can modify your component to achieve this:

Summary of Changes:
Create a refetchShipment function: This function will contain the logic to fetch the shipment data and update the component's state, including loading states.
Update useEffect: The initial data fetch will now use this new refetchShipment function. I've also added id to the dependency array, which is a good practice.
Create async event handlers: New handleDispatchShipment and handleDeliverShipment functions will await the update action and then await the refetchShipment call to refresh the data.
Update Buttons: The buttons will now use these new handler functions.
Cleanup: The old, standalone dispatchShipment and deliverShipment functions are no longer needed and can be removed.
Here are the suggested code changes:

page.tsx
-32
+29
  const params = use(props.params);
  const id = decodeURIComponent(params.id);

  const [shipment, setShipment] = useState<ShipmentStatus | null>(null);
  const [pageLoading, setPageLoading] = useState(true);

  // Initial data fetch

  const broadcasterRef = useRef<BroadcastChannel | null>(null);

  // Effect to synchronize local status if the initialShipment prop's status changes.
  // This handles cases where the parent component might pass updated shipment data.
  useEffect(() => {
  const refetchShipment = async () => {
    setPageLoading(true);
    const shipment = fetchShipmentById(id);
    shipment
      .then((fetchedShipment) => {
        if (!fetchedShipment) {
          setPageLoading(false);
        } else {
          setShipment(fetchedShipment);
          setPageLoading(false);
        }
      })
      .catch((error) => {
        console.error('Error fetching shipment:', error);
        setPageLoading(false);
      });
  }, []);
    try {
      const fetchedShipment = await fetchShipmentById(id);
      setShipment(fetchedShipment ?? null);
    } catch (error) {
      console.error('Error fetching shipment:', error);
      setShipment(null);
    } finally {
      setPageLoading(false);
    }
  };

  // Initial data fetch
  useEffect(() => {
    refetchShipment();
  }, [id]);

  // Render loading state or error if shipment data is not available.
  if (pageLoading) {
    return (
      <div className="p-4">
        <Heading>Loading shipment details...</Heading>
      </div>
    );
  } else {
    if (!shipment) {
      return (
        <div className="p-4">
          <Heading>Shipment not found</Heading>
        </div>
      );
    }

    const handleDispatchShipment = async () => {
      await updateShipmentCarrierStatus(shipment.id, shipment.workflowId, 'dispatched');
      await refetchShipment();
    };

    const handleDeliverShipment = async () => {
      await updateShipmentCarrierStatus(shipment.id, shipment.workflowId, 'delivered');
      await refetchShipment();
    };

    const actionButtonsContent = (
      <>
        <Button disabled={shipment?.status !== 'booked'} onClick={() => dispatchShipment(shipment)}>
        <Button disabled={shipment.status !== 'booked'} onClick={handleDispatchShipment}>
          Dispatch
        </Button>
        <Button
          disabled={shipment?.status !== 'dispatched'}
          onClick={() => deliverShipment(shipment)}
        >
        <Button disabled={shipment.status !== 'dispatched'} onClick={handleDeliverShipment}>
          Deliver
        </Button>
      </>
    );
  }
}
function dispatchShipment(shipmentStatus: ShipmentStatus) {
  updateShipmentCarrierStatus(shipmentStatus.id, shipmentStatus.workflowId, 'dispatched');
}

function deliverShipment(shipmentStatus: ShipmentStatus) {
  updateShipmentCarrierStatus(shipmentStatus.id, shipmentStatus.workflowId, 'delivered');
}

Alternative: Using router.refresh()
For future reference, the idiomatic way to refresh data in Next.js's App Router is by using router.refresh(). This method re-fetches the route from the server and re-renders Server Components without a full page reload, preserving client-side state.

This approach works best when data fetching is done in a Server Component and the data is passed down to your Client Component as props. If you were to refactor your page to follow that pattern, you could use useRouter from next/navigation to get access to the refresh method.

I hope this helps you get your page refreshing as you need it! Let me know if you have any other questions.

 Revert to checkpoint
Context Sources (11)
Prompts to try
1 context item

#+end_example

#+begin_src
#+end_src

#+begin_example
[start:shipment-worker] 2025-06-24T16:52:24.777Z [INFO] Worker state changed { sdkComponent: 'worker', taskQueue: 'shipments', state: 'STOPPING' }
[start:order-worker   ] 2025-06-24T16:52:24.779Z [INFO] Worker state changed { sdkComponent: 'worker', taskQueue: 'orders', state: 'STOPPING' }
[start:shipment-worker] 2025-06-24T16:52:24.780Z [INFO] Worker state changed { sdkComponent: 'worker', taskQueue: 'shipments', state: 'DRAINING' }
[start:order-worker   ] 2025-06-24T16:52:24.782Z [INFO] Worker state changed { sdkComponent: 'worker', taskQueue: 'orders', state: 'DRAINING' }
[start:shipment-worker] 2025-06-24T16:52:24.785Z [INFO] Worker state changed { sdkComponent: 'worker', taskQueue: 'shipments', state: 'DRAINED' }
[start:shipment-worker] 2025-06-24T16:52:24.785Z [INFO] Worker state changed { sdkComponent: 'worker', taskQueue: 'shipments', state: 'STOPPED' }
[start:order-worker   ] 2025-06-24T16:52:24.786Z [INFO] Worker state changed { sdkComponent: 'worker', taskQueue: 'orders', state: 'DRAINED' }
[start:order-worker   ] 2025-06-24T16:52:24.787Z [INFO] Worker state changed { sdkComponent: 'worker', taskQueue: 'orders', state: 'STOPPED' }
[start:shipment-worker] 2025-06-24T16:52:24.789974Z  WARN temporal_sdk_core::worker: Failed to shutdown sticky queue  Status { code: Unimplemented, message: "unknown method ShutdownWorker for service temporal.api.workflowservice.v1.WorkflowService", metadata: MetadataMap { headers: {"content-type": "application/grpc"} }, source: None }
[start:order-worker   ] 2025-06-24T16:52:24.791888Z  WARN temporal_sdk_core::worker: Failed to shutdown sticky queue  Status { code: Unimplemented, message: "unknown method ShutdownWorker for service temporal.api.workflowservice.v1.WorkflowService", metadata: MetadataMap { headers: {"content-type": "application/grpc"} }, source: None }
[start:shipment-worker] Waiting for the debugger to disconnect...
[start:order-worker   ] Waiting for the debugger to disconnect...
[dev:next             ]  ✓ Compiled in 465ms (353 modules)
[start:billing-worker ] Debugger attached.
[dev:next             ]  GET /orders/A1-1750783449972 200 in 285ms
[dev:next             ]  GET /shipments 200 in 292ms
[start:order-worker   ] Debugger attached.
[start:shipment-worker] Debugger attached.
[dev:next             ] Debugger attached.
[start:billing-worker ] 2025-06-24T16:52:26.433Z [INFO] Creating worker {
[start:billing-worker ]   sdkComponent: 'worker',
[start:billing-worker ]   taskQueue: 'billing',
[start:billing-worker ]   options: {
[start:billing-worker ]     namespace: 'default',
[start:billing-worker ]     identity: '64432@Jeffs-MacBook-Pro.local',
[start:billing-worker ]     useVersioning: false,
[start:billing-worker ]     buildId: undefined,
[start:billing-worker ]     shutdownGraceTime: 0,
[start:billing-worker ]     enableNonLocalActivities: true,
[start:billing-worker ]     maxConcurrentWorkflowTaskPolls: 10,
[start:billing-worker ]     maxConcurrentActivityTaskPolls: 10,
[start:billing-worker ]     stickyQueueScheduleToStartTimeout: '10s',
[start:billing-worker ]     maxHeartbeatThrottleInterval: '60s',
[start:billing-worker ]     defaultHeartbeatThrottleInterval: '30s',
[start:billing-worker ]     isolateExecutionTimeout: '5s',
[start:billing-worker ]     workflowThreadPoolSize: 1,
[start:billing-worker ]     maxCachedWorkflows: 2310,
[start:billing-worker ]     showStackTraceSources: false,
[start:billing-worker ]     debugMode: false,
[start:billing-worker ]     interceptors: { activity: [], workflowModules: [] },
[start:billing-worker ]     nonStickyToStickyPollRatio: 0.2,
[start:billing-worker ]     sinks: { __temporal_logger: [Object] },
[start:billing-worker ]     connection: NativeConnection {
[start:billing-worker ]       nativeClient: [External: 7ff4e1831260],
[start:billing-worker ]       referenceHolders: Set(0) {}
[start:billing-worker ]     },
[start:billing-worker ]     workflowsPath: '/Users/jeffromine/src/learning/temporal/reference-app-oms-nextjs-ts/src/temporal/lib/billing/workflows.js',
[start:billing-worker ]     activities: Map(2) {
[start:billing-worker ]       'chargeCustomer' => [AsyncFunction: chargeCustomer],
[start:billing-worker ]       'generateInvoice' => [AsyncFunction: generateInvoice]
[start:billing-worker ]     },
[start:billing-worker ]     taskQueue: 'billing',
[start:billing-worker ]     tuner: {
[start:billing-worker ]       workflowTaskSlotSupplier: [Object],
[start:billing-worker ]       activityTaskSlotSupplier: [Object],
[start:billing-worker ]       localActivityTaskSlotSupplier: [Object]
[start:billing-worker ]     },
[start:billing-worker ]     reuseV8Context: true,
[start:billing-worker ]     shutdownGraceTimeMs: 0,
[start:billing-worker ]     shutdownForceTimeMs: undefined,
[start:billing-worker ]     stickyQueueScheduleToStartTimeoutMs: 10000,
[start:billing-worker ]     isolateExecutionTimeoutMs: 5000,
[start:billing-worker ]     maxHeartbeatThrottleIntervalMs: 60000,
[start:billing-worker ]     defaultHeartbeatThrottleIntervalMs: 30000,
[start:billing-worker ]     loadedDataConverter: {
[start:billing-worker ]       payloadConverter: [DefaultPayloadConverter],
[start:billing-worker ]       failureConverter: [DefaultFailureConverter],
[start:billing-worker ]       payloadCodecs: []
[start:billing-worker ]     }
[start:billing-worker ]   }
[start:billing-worker ] }
[start:order-worker   ] 2025-06-24T16:52:26.808Z [INFO] Creating worker {
[start:order-worker   ]   sdkComponent: 'worker',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   options: {
[start:order-worker   ]     namespace: 'default',
[start:order-worker   ]     identity: '64434@Jeffs-MacBook-Pro.local',
[start:order-worker   ]     useVersioning: false,
[start:order-worker   ]     buildId: undefined,
[start:order-worker   ]     shutdownGraceTime: 0,
[start:order-worker   ]     enableNonLocalActivities: true,
[start:order-worker   ]     maxConcurrentWorkflowTaskPolls: 10,
[start:order-worker   ]     maxConcurrentActivityTaskPolls: 10,
[start:order-worker   ]     stickyQueueScheduleToStartTimeout: '10s',
[start:order-worker   ]     maxHeartbeatThrottleInterval: '60s',
[start:order-worker   ]     defaultHeartbeatThrottleInterval: '30s',
[start:order-worker   ]     isolateExecutionTimeout: '5s',
[start:order-worker   ]     workflowThreadPoolSize: 1,
[start:order-worker   ]     maxCachedWorkflows: 2310,
[start:order-worker   ]     showStackTraceSources: false,
[start:order-worker   ]     debugMode: false,
[start:order-worker   ]     interceptors: { activity: [], workflowModules: [] },
[start:order-worker   ]     nonStickyToStickyPollRatio: 0.2,
[start:order-worker   ]     sinks: { __temporal_logger: [Object] },
[start:order-worker   ]     connection: NativeConnection {
[start:order-worker   ]       nativeClient: [External: 7f9731009480],
[start:order-worker   ]       referenceHolders: Set(0) {}
[start:order-worker   ]     },
[start:order-worker   ]     workflowsPath: '/Users/jeffromine/src/learning/temporal/reference-app-oms-nextjs-ts/src/temporal/lib/order/workflows.js',
[start:order-worker   ]     activities: Map(4) {
[start:order-worker   ]       'fetchOrders' => [AsyncFunction: fetchOrders],
[start:order-worker   ]       'insertOrder' => [AsyncFunction: insertOrder],
[start:order-worker   ]       'reserveItems' => [AsyncFunction: reserveItems],
[start:order-worker   ]       'updateOrderStatus' => [AsyncFunction: updateOrderStatus]
[start:order-worker   ]     },
[start:order-worker   ]     taskQueue: 'orders',
[start:order-worker   ]     tuner: {
[start:order-worker   ]       workflowTaskSlotSupplier: [Object],
[start:order-worker   ]       activityTaskSlotSupplier: [Object],
[start:order-worker   ]       localActivityTaskSlotSupplier: [Object]
[start:order-worker   ]     },
[start:order-worker   ]     reuseV8Context: true,
[start:order-worker   ]     shutdownGraceTimeMs: 0,
[start:order-worker   ]     shutdownForceTimeMs: undefined,
[start:order-worker   ]     stickyQueueScheduleToStartTimeoutMs: 10000,
[start:order-worker   ]     isolateExecutionTimeoutMs: 5000,
[start:order-worker   ]     maxHeartbeatThrottleIntervalMs: 60000,
[start:order-worker   ]     defaultHeartbeatThrottleIntervalMs: 30000,
[start:order-worker   ]     loadedDataConverter: {
[start:order-worker   ]       payloadConverter: [DefaultPayloadConverter],
[start:order-worker   ]       failureConverter: [DefaultFailureConverter],
[start:order-worker   ]       payloadCodecs: []
[start:order-worker   ]     }
[start:order-worker   ]   }
[start:order-worker   ] }
[start:shipment-worker] 2025-06-24T16:52:27.062Z [INFO] Creating worker {
[start:shipment-worker]   sdkComponent: 'worker',
[start:shipment-worker]   taskQueue: 'shipments',
[start:shipment-worker]   options: {
[start:shipment-worker]     namespace: 'default',
[start:shipment-worker]     identity: '64433@Jeffs-MacBook-Pro.local',
[start:shipment-worker]     useVersioning: false,
[start:shipment-worker]     buildId: undefined,
[start:shipment-worker]     shutdownGraceTime: 0,
[start:shipment-worker]     enableNonLocalActivities: true,
[start:shipment-worker]     maxConcurrentWorkflowTaskPolls: 10,
[start:shipment-worker]     maxConcurrentActivityTaskPolls: 10,
[start:shipment-worker]     stickyQueueScheduleToStartTimeout: '10s',
[start:shipment-worker]     maxHeartbeatThrottleInterval: '60s',
[start:shipment-worker]     defaultHeartbeatThrottleInterval: '30s',
[start:shipment-worker]     isolateExecutionTimeout: '5s',
[start:shipment-worker]     workflowThreadPoolSize: 1,
[start:shipment-worker]     maxCachedWorkflows: 2310,
[start:shipment-worker]     showStackTraceSources: false,
[start:shipment-worker]     debugMode: false,
[start:shipment-worker]     interceptors: { activity: [], workflowModules: [] },
[start:shipment-worker]     nonStickyToStickyPollRatio: 0.2,
[start:shipment-worker]     sinks: { __temporal_logger: [Object] },
[start:shipment-worker]     connection: NativeConnection {
[start:shipment-worker]       nativeClient: [External: 7f85d8998e50],
[start:shipment-worker]       referenceHolders: Set(0) {}
[start:shipment-worker]     },
[start:shipment-worker]     workflowsPath: '/Users/jeffromine/src/learning/temporal/reference-app-oms-nextjs-ts/src/temporal/lib/shipment/workflows.js',
[start:shipment-worker]     activities: Map(2) {
[start:shipment-worker]       'bookShipment' => [AsyncFunction: bookShipment],
[start:shipment-worker]       'updateShipmentStatus' => [AsyncFunction: updateShipmentStatus]
[start:shipment-worker]     },
[start:shipment-worker]     taskQueue: 'shipments',
[start:shipment-worker]     tuner: {
[start:shipment-worker]       workflowTaskSlotSupplier: [Object],
[start:shipment-worker]       activityTaskSlotSupplier: [Object],
[start:shipment-worker]       localActivityTaskSlotSupplier: [Object]
[start:shipment-worker]     },
[start:shipment-worker]     reuseV8Context: true,
[start:shipment-worker]     shutdownGraceTimeMs: 0,
[start:shipment-worker]     shutdownForceTimeMs: undefined,
[start:shipment-worker]     stickyQueueScheduleToStartTimeoutMs: 10000,
[start:shipment-worker]     isolateExecutionTimeoutMs: 5000,
[start:shipment-worker]     maxHeartbeatThrottleIntervalMs: 60000,
[start:shipment-worker]     defaultHeartbeatThrottleIntervalMs: 30000,
[start:shipment-worker]     loadedDataConverter: {
[start:shipment-worker]       payloadConverter: [DefaultPayloadConverter],
[start:shipment-worker]       failureConverter: [DefaultFailureConverter],
[start:shipment-worker]       payloadCodecs: []
[start:shipment-worker]     }
[start:shipment-worker]   }
[start:shipment-worker] }
[dev:next             ] Waiting for the debugger to disconnect...
[start:billing-worker ] 2025-06-24T16:52:30.432Z [INFO] asset workflow-bundle-471cd41c181d7e210fc5.js 961 KiB [emitted] [immutable] (name: main)
[start:billing-worker ] runtime modules 670 bytes 3 modules
[start:billing-worker ] modules by path ./node_modules/@temporalio/ 237 KiB
[start:billing-worker ]   modules by path ./node_modules/@temporalio/common/ 98.7 KiB 24 modules
[start:billing-worker ]   modules by path ./node_modules/@temporalio/workflow/ 138 KiB
[start:billing-worker ]     ./node_modules/@temporalio/workflow/lib/worker-interface.js 8.38 KiB [built] [code generated]
[start:billing-worker ]     ./node_modules/@temporalio/workflow/lib/global-overrides.js 4.09 KiB [built] [code generated]
[start:billing-worker ]     ./node_modules/@temporalio/workflow/lib/cancellation-scope.js 9.92 KiB [built] [code generated]
[start:billing-worker ]     + 16 modules
[start:billing-worker ] modules by path ./src/temporal/lib/billing/ 1.45 KiB
[start:billing-worker ]   ./src/temporal/lib/billing/workflows-autogenerated-entrypoint.cjs 491 bytes [built] [code generated]
[start:billing-worker ]   ./src/temporal/lib/billing/workflows.js 992 bytes [built] [code generated]
[start:billing-worker ] __temporal_custom_payload_converter (ignored) 15 bytes [built] [code generated]
[start:billing-worker ] __temporal_custom_failure_converter (ignored) 15 bytes [built] [code generated]
[start:billing-worker ] ./node_modules/long/umd/index.js 49.8 KiB [built] [code generated]
[start:billing-worker ] webpack 5.99.8 compiled successfully in 2569 ms { sdkComponent: 'worker', taskQueue: 'billing' }
[start:billing-worker ] 2025-06-24T16:52:30.437Z [INFO] Workflow bundle created { sdkComponent: 'worker', taskQueue: 'billing', size: '0.94MB' }
[start:order-worker   ] 2025-06-24T16:52:30.905Z [INFO] asset workflow-bundle-670770568f74a1424065.js 1000 KiB [emitted] [immutable] (name: main)
[start:order-worker   ] runtime modules 670 bytes 3 modules
[start:order-worker   ] modules by path ./node_modules/@temporalio/ 237 KiB
[start:order-worker   ]   modules by path ./node_modules/@temporalio/common/ 98.7 KiB 24 modules
[start:order-worker   ]   modules by path ./node_modules/@temporalio/workflow/ 138 KiB
[start:order-worker   ]     ./node_modules/@temporalio/workflow/lib/worker-interface.js 8.38 KiB [built] [code generated]
[start:order-worker   ]     ./node_modules/@temporalio/workflow/lib/global-overrides.js 4.09 KiB [built] [code generated]
[start:order-worker   ]     ./node_modules/@temporalio/workflow/lib/cancellation-scope.js 9.92 KiB [built] [code generated]
[start:order-worker   ]     + 16 modules
[start:order-worker   ] modules by path ./src/temporal/lib/order/ 11.5 KiB
[start:order-worker   ]   ./src/temporal/lib/order/workflows-autogenerated-entrypoint.cjs 489 bytes [built] [code generated]
[start:order-worker   ]   ./src/temporal/lib/order/workflows.js 11.1 KiB [built] [code generated]
[start:order-worker   ] __temporal_custom_payload_converter (ignored) 15 bytes [built] [code generated]
[start:order-worker   ] __temporal_custom_failure_converter (ignored) 15 bytes [built] [code generated]
[start:order-worker   ] ./node_modules/long/umd/index.js 49.8 KiB [built] [code generated]
[start:order-worker   ] webpack 5.99.8 compiled successfully in 2601 ms { sdkComponent: 'worker', taskQueue: 'orders' }
[start:order-worker   ] 2025-06-24T16:52:30.910Z [INFO] Workflow bundle created { sdkComponent: 'worker', taskQueue: 'orders', size: '0.98MB' }
[start:billing-worker ] 2025-06-24T16:52:31.050Z [INFO] Worker state changed { sdkComponent: 'worker', taskQueue: 'billing', state: 'RUNNING' }
[start:order-worker   ] 2025-06-24T16:52:31.347Z [INFO] Worker state changed { sdkComponent: 'worker', taskQueue: 'orders', state: 'RUNNING' }
[start:shipment-worker] 2025-06-24T16:52:31.349Z [INFO] asset workflow-bundle-98ba656e139c73c92654.js 2.13 MiB [emitted] [immutable] (name: main)
[start:shipment-worker] runtime modules 670 bytes 3 modules
[start:shipment-worker] modules by path ./node_modules/@temporalio/ 237 KiB
[start:shipment-worker]   modules by path ./node_modules/@temporalio/common/ 98.7 KiB 24 modules
[start:shipment-worker]   modules by path ./node_modules/@temporalio/workflow/ 138 KiB
[start:shipment-worker]     ./node_modules/@temporalio/workflow/lib/worker-interface.js 8.38 KiB [built] [code generated]
[start:shipment-worker]     ./node_modules/@temporalio/workflow/lib/global-overrides.js 4.09 KiB [built] [code generated]
[start:shipment-worker]     + 17 modules
[start:shipment-worker] modules by path ./src/temporal/lib/shipment/ 3.09 KiB
[start:shipment-worker]   ./src/temporal/lib/shipment/workflows-autogenerated-entrypoint.cjs 492 bytes [built] [code generated]
[start:shipment-worker]   ./src/temporal/lib/shipment/workflows.js 2.61 KiB [built] [code generated]
[start:shipment-worker] __temporal_custom_payload_converter (ignored) 15 bytes [built] [code generated]
[start:shipment-worker] __temporal_custom_failure_converter (ignored) 15 bytes [built] [code generated]
[start:shipment-worker] ./node_modules/@js-temporal/polyfill/dist/index.esm.js 126 KiB [built] [code generated]
[start:shipment-worker] ./node_modules/long/umd/index.js 49.8 KiB [built] [code generated]
[start:shipment-worker] ./node_modules/jsbi/dist/jsbi-umd.js 34.4 KiB [built] [code generated]
[start:shipment-worker] webpack 5.99.8 compiled successfully in 2967 ms { sdkComponent: 'worker', taskQueue: 'shipments' }
[start:shipment-worker] 2025-06-24T16:52:31.356Z [INFO] Workflow bundle created { sdkComponent: 'worker', taskQueue: 'shipments', size: '2.13MB' }
[start:shipment-worker] 2025-06-24T16:52:31.979Z [INFO] Worker state changed { sdkComponent: 'worker', taskQueue: 'shipments', state: 'RUNNING' }
[dev:next             ]  GET /orders/new 200 in 57ms
[dev:next             ] {
[dev:next             ]   "order": "{\"id\":\"A2-1750783972664\",\"customerId\":\"1234\",\"items\":[{\"sku\":\"Reebok Classic Leather White\",\"description\":\"The Reebok Classic Leather combines timeless style with modern comfort, featuring premium materials and cutting-edge technology for unmatched performance.\",\"quantity\":1},{\"sku\":\"New Balance 574\",\"description\":\"This latest version of the New Balance 574, Model 15, combines heritage styling with modern technology for an improved fit and function.\",\"quantity\":1},{\"sku\":\"Nike Air Force Ones\",\"description\":\"A second iteration of the classic, the Nike Air Force Ones Model 11 is redesigned for the modern athlete, offering enhanced cushioning and durability.\",\"quantity\":3}]}"
[dev:next             ] }
[dev:next             ] {
[dev:next             ]   "id": "A2-1750783972664",
[dev:next             ]   "customerId": "1234",
[dev:next             ]   "items": [
[dev:next             ]     {
[dev:next             ]       "sku": "Reebok Classic Leather White",
[dev:next             ]       "description": "The Reebok Classic Leather combines timeless style with modern comfort, featuring premium materials and cutting-edge technology for unmatched performance.",
[dev:next             ]       "quantity": 1
[dev:next             ]     },
[dev:next             ]     {
[dev:next             ]       "sku": "New Balance 574",
[dev:next             ]       "description": "This latest version of the New Balance 574, Model 15, combines heritage styling with modern technology for an improved fit and function.",
[dev:next             ]       "quantity": 1
[dev:next             ]     },
[dev:next             ]     {
[dev:next             ]       "sku": "Nike Air Force Ones",
[dev:next             ]       "description": "A second iteration of the classic, the Nike Air Force Ones Model 11 is redesigned for the modern athlete, offering enhanced cushioning and durability.",
[dev:next             ]       "quantity": 3
[dev:next             ]     }
[dev:next             ]   ]
[dev:next             ] }
[dev:next             ] Workflow started successfully: {
[dev:next             ]   client: WorkflowClient {
[dev:next             ]     connection: Connection {
[dev:next             ]       options: [Object],
[dev:next             ]       client: [ServiceClientImpl],
[dev:next             ]       workflowService: [Service],
[dev:next             ]       operatorService: [Service],
[dev:next             ]       healthService: [Service],
[dev:next             ]       callContextStorage: [AsyncLocalStorage],
[dev:next             ]       apiKeyFnRef: {}
[dev:next             ]     },
[dev:next             ]     loadedDataConverter: {
[dev:next             ]       payloadConverter: [DefaultPayloadConverter],
[dev:next             ]       failureConverter: [DefaultFailureConverter],
[dev:next             ]       payloadCodecs: []
[dev:next             ]     },
[dev:next             ]     options: {
[dev:next             ]       dataConverter: [Object],
[dev:next             ]       identity: '56437@Jeffs-MacBook-Pro.local',
[dev:next             ]       namespace: 'default',
[dev:next             ]       interceptors: [],
[dev:next             ]       queryRejectCondition: 'NONE',
[dev:next             ]       connection: [Connection],
[dev:next             ]       loadedDataConverter: [Object]
[dev:next             ]     }
[dev:next             ]   },
[dev:next             ]   workflowId: 'A2-1750783972664',
[dev:next             ]   result: [AsyncFunction: result],
[dev:next             ]   terminate: [AsyncFunction: terminate],
[dev:next             ]   cancel: [AsyncFunction: cancel],
[dev:next             ]   describe: [AsyncFunction: describe],
[dev:next             ]   fetchHistory: [AsyncFunction: fetchHistory],
[dev:next             ]   startUpdate: [AsyncFunction: startUpdate],
[dev:next             ]   executeUpdate: [AsyncFunction: executeUpdate],
[dev:next             ]   getUpdateHandle: [Function: getUpdateHandle],
[dev:next             ]   signal: [AsyncFunction: signal],
[dev:next             ]   query: [AsyncFunction: query],
[dev:next             ]   firstExecutionRunId: 'b1db16bb-11ba-427c-94f9-1bdf4b060598'
[dev:next             ] }
[dev:next             ] Workflow result: undefined
[start:order-worker   ] 2025-06-24T16:52:57.383Z [INFO] Order: {
[start:order-worker   ]   "id": "A2-1750783972664",
[start:order-worker   ]   "customerId": "1234",
[start:order-worker   ]   "items": [
[start:order-worker   ]     {
[start:order-worker   ]       "sku": "Reebok Classic Leather White",
[start:order-worker   ]       "quantity": 1
[start:order-worker   ]     },
[start:order-worker   ]     {
[start:order-worker   ]       "sku": "New Balance 574",
[start:order-worker   ]       "quantity": 1
[start:order-worker   ]     },
[start:order-worker   ]     {
[start:order-worker   ]       "sku": "Nike Air Force Ones",
[start:order-worker   ]       "quantity": 3
[start:order-worker   ]     }
[start:order-worker   ]   ],
[start:order-worker   ]   "receivedAt": "2025-06-24T16:52:57.177Z",
[start:order-worker   ]   "status": "pending"
[start:order-worker   ] } created! {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'A2-1750783972664',
[start:order-worker   ]   runId: 'b1db16bb-11ba-427c-94f9-1bdf4b060598',
[start:order-worker   ]   workflowType: 'order'
[start:order-worker   ] }
[start:order-worker   ] 2025-06-24T16:52:57.405Z [INFO] reserveItems: {
[start:order-worker   ]   "orderId": "A2-1750783972664",
[start:order-worker   ]   "items": [
[start:order-worker   ]     {
[start:order-worker   ]       "sku": "Reebok Classic Leather White",
[start:order-worker   ]       "quantity": 1
[start:order-worker   ]     },
[start:order-worker   ]     {
[start:order-worker   ]       "sku": "New Balance 574",
[start:order-worker   ]       "quantity": 1
[start:order-worker   ]     },
[start:order-worker   ]     {
[start:order-worker   ]       "sku": "Nike Air Force Ones",
[start:order-worker   ]       "quantity": 3
[start:order-worker   ]     }
[start:order-worker   ]   ]
[start:order-worker   ] } {
[start:order-worker   ]   sdkComponent: 'activity',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   isLocal: false,
[start:order-worker   ]   attempt: 1,
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   taskToken: 'CiQ2MTEyM2U3OC01NjZlLTQwOWYtYTczOC1lNDMxOTVlZmU2MDkSEEEyLTE3NTA3ODM5NzI2NjQaJGIxZGIxNmJiLTExYmEtNDI3Yy05NGY5LTFiZGY0YjA2MDU5OCAFKAEyATFCDHJlc2VydmVJdGVtc0oICAEQhINAGAE=',
[start:order-worker   ]   workflowId: 'A2-1750783972664',
[start:order-worker   ]   workflowRunId: 'b1db16bb-11ba-427c-94f9-1bdf4b060598',
[start:order-worker   ]   workflowType: 'order',
[start:order-worker   ]   activityId: '1',
[start:order-worker   ]   activityType: 'reserveItems'
[start:order-worker   ] }
[start:order-worker   ] 2025-06-24T16:52:57.438Z [INFO] Reservations: [
[start:order-worker   ]   {
[start:order-worker   ]     "available": true,
[start:order-worker   ]     "location": "store",
[start:order-worker   ]     "items": [
[start:order-worker   ]       {
[start:order-worker   ]         "sku": "Nike Air Force Ones",
[start:order-worker   ]         "quantity": 3
[start:order-worker   ]       }
[start:order-worker   ]     ]
[start:order-worker   ]   },
[start:order-worker   ]   {
[start:order-worker   ]     "available": true,
[start:order-worker   ]     "location": "warehouse",
[start:order-worker   ]     "items": [
[start:order-worker   ]       {
[start:order-worker   ]         "sku": "Reebok Classic Leather White",
[start:order-worker   ]         "quantity": 1
[start:order-worker   ]       },
[start:order-worker   ]       {
[start:order-worker   ]         "sku": "New Balance 574",
[start:order-worker   ]         "quantity": 1
[start:order-worker   ]       }
[start:order-worker   ]     ]
[start:order-worker   ]   }
[start:order-worker   ] ] {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'A2-1750783972664',
[start:order-worker   ]   runId: 'b1db16bb-11ba-427c-94f9-1bdf4b060598',
[start:order-worker   ]   workflowType: 'order'
[start:order-worker   ] }
[dev:next             ] Inserted order: 1
[dev:next             ]  GET /orders/A2-1750783972664 200 in 51ms
[dev:next             ]  POST /orders/new 303 in 516ms
[dev:next             ] Fetched order: {
[dev:next             ]   "id": "A2-1750783972664",
[dev:next             ]   "customerId": "1234",
[dev:next             ]   "items": [
[dev:next             ]     {
[dev:next             ]       "sku": "Reebok Classic Leather White",
[dev:next             ]       "quantity": 1
[dev:next             ]     },
[dev:next             ]     {
[dev:next             ]       "sku": "New Balance 574",
[dev:next             ]       "quantity": 1
[dev:next             ]     },
[dev:next             ]     {
[dev:next             ]       "sku": "Nike Air Force Ones",
[dev:next             ]       "quantity": 3
[dev:next             ]     }
[dev:next             ]   ],
[dev:next             ]   "receivedAt": "2025-06-24T16:52:57.177Z",
[dev:next             ]   "status": "pending",
[dev:next             ]   "fulfillments": [
[dev:next             ]     {
[dev:next             ]       "orderId": "A2-1750783972664",
[dev:next             ]       "customerId": "1234",
[dev:next             ]       "id": "A2-1750783972664:1",
[dev:next             ]       "items": [
[dev:next             ]         {
[dev:next             ]           "sku": "Nike Air Force Ones",
[dev:next             ]           "quantity": 3
[dev:next             ]         }
[dev:next             ]       ],
[dev:next             ]       "location": "store",
[dev:next             ]       "status": "pending"
[dev:next             ]     },
[dev:next             ]     {
[dev:next             ]       "orderId": "A2-1750783972664",
[dev:next             ]       "customerId": "1234",
[dev:next             ]       "id": "A2-1750783972664:2",
[dev:next             ]       "items": [
[dev:next             ]         {
[dev:next             ]           "sku": "Reebok Classic Leather White",
[dev:next             ]           "quantity": 1
[dev:next             ]         },
[dev:next             ]         {
[dev:next             ]           "sku": "New Balance 574",
[dev:next             ]           "quantity": 1
[dev:next             ]         }
[dev:next             ]       ],
[dev:next             ]       "location": "warehouse",
[dev:next             ]       "status": "pending"
[dev:next             ]     }
[dev:next             ]   ]
[dev:next             ] }
[dev:next             ]  POST /orders/A2-1750783972664 200 in 75ms
[start:order-worker   ] 2025-06-24T16:52:57.879Z [INFO] Starting fulfillment workflow for: A2-1750783972664:1 {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'A2-1750783972664',
[start:order-worker   ]   runId: 'b1db16bb-11ba-427c-94f9-1bdf4b060598',
[start:order-worker   ]   workflowType: 'order'
[start:order-worker   ] }
[start:order-worker   ] 2025-06-24T16:52:57.880Z [INFO] Starting fulfillment workflow for: A2-1750783972664:2 {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'A2-1750783972664',
[start:order-worker   ]   runId: 'b1db16bb-11ba-427c-94f9-1bdf4b060598',
[start:order-worker   ]   workflowType: 'order'
[start:order-worker   ] }
[dev:next             ] Fetched order: {
[dev:next             ]   "id": "A2-1750783972664",
[dev:next             ]   "customerId": "1234",
[dev:next             ]   "items": [
[dev:next             ]     {
[dev:next             ]       "sku": "Reebok Classic Leather White",
[dev:next             ]       "quantity": 1
[dev:next             ]     },
[dev:next             ]     {
[dev:next             ]       "sku": "New Balance 574",
[dev:next             ]       "quantity": 1
[dev:next             ]     },
[dev:next             ]     {
[dev:next             ]       "sku": "Nike Air Force Ones",
[dev:next             ]       "quantity": 3
[dev:next             ]     }
[dev:next             ]   ],
[dev:next             ]   "receivedAt": "2025-06-24T16:52:57.177Z",
[dev:next             ]   "status": "pending",
[dev:next             ]   "fulfillments": [
[dev:next             ]     {
[dev:next             ]       "orderId": "A2-1750783972664",
[dev:next             ]       "customerId": "1234",
[dev:next             ]       "id": "A2-1750783972664:1",
[dev:next             ]       "items": [
[dev:next             ]         {
[dev:next             ]           "sku": "Nike Air Force Ones",
[dev:next             ]           "quantity": 3
[dev:next             ]         }
[dev:next             ]       ],
[dev:next             ]       "location": "store",
[dev:next             ]       "status": "pending"
[dev:next             ]     },
[dev:next             ]     {
[dev:next             ]       "orderId": "A2-1750783972664",
[dev:next             ]       "customerId": "1234",
[dev:next             ]       "id": "A2-1750783972664:2",
[dev:next             ]       "items": [
[dev:next             ]         {
[dev:next             ]           "sku": "Reebok Classic Leather White",
[dev:next             ]           "quantity": 1
[dev:next             ]         },
[dev:next             ]         {
[dev:next             ]           "sku": "New Balance 574",
[dev:next             ]           "quantity": 1
[dev:next             ]         }
[dev:next             ]       ],
[dev:next             ]       "location": "warehouse",
[dev:next             ]       "status": "pending"
[dev:next             ]     }
[dev:next             ]   ]
[dev:next             ] }
[dev:next             ]  POST /orders/A2-1750783972664 200 in 165ms
[start:order-worker   ] 2025-06-24T16:52:58.015Z [INFO] processFulfillment(A2-1750783972664:2) {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'fulfill-A2-1750783972664:2',
[start:order-worker   ]   runId: 'c53d9f34-c943-4850-98ce-de497a5ec93b',
[start:order-worker   ]   workflowType: 'fulfill'
[start:order-worker   ] }
[start:order-worker   ] 2025-06-24T16:52:58.015Z [INFO] processPayment: {
[start:order-worker   ]   "orderId": "A2-1750783972664",
[start:order-worker   ]   "customerId": "1234",
[start:order-worker   ]   "id": "A2-1750783972664:2",
[start:order-worker   ]   "items": [
[start:order-worker   ]     {
[start:order-worker   ]       "sku": "Reebok Classic Leather White",
[start:order-worker   ]       "quantity": 1
[start:order-worker   ]     },
[start:order-worker   ]     {
[start:order-worker   ]       "sku": "New Balance 574",
[start:order-worker   ]       "quantity": 1
[start:order-worker   ]     }
[start:order-worker   ]   ],
[start:order-worker   ]   "location": "warehouse",
[start:order-worker   ]   "status": "pending"
[start:order-worker   ] } {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'fulfill-A2-1750783972664:2',
[start:order-worker   ]   runId: 'c53d9f34-c943-4850-98ce-de497a5ec93b',
[start:order-worker   ]   workflowType: 'fulfill'
[start:order-worker   ] }
[start:order-worker   ] 2025-06-24T16:52:58.015Z [INFO] charge: workflowId: charge-fulfill-A2-1750783972664:2-85154483-fc80-4619-ad22-6daa996cdb65 {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'fulfill-A2-1750783972664:2',
[start:order-worker   ]   runId: 'c53d9f34-c943-4850-98ce-de497a5ec93b',
[start:order-worker   ]   workflowType: 'fulfill'
[start:order-worker   ] }
[start:order-worker   ] 2025-06-24T16:52:58.017Z [INFO] processFulfillment(A2-1750783972664:1) {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'fulfill-A2-1750783972664:1',
[start:order-worker   ]   runId: '6261a3a1-5840-4471-a1ca-e0be9afa9465',
[start:order-worker   ]   workflowType: 'fulfill'
[start:order-worker   ] }
[start:order-worker   ] 2025-06-24T16:52:58.018Z [INFO] processPayment: {
[start:order-worker   ]   "orderId": "A2-1750783972664",
[start:order-worker   ]   "customerId": "1234",
[start:order-worker   ]   "id": "A2-1750783972664:1",
[start:order-worker   ]   "items": [
[start:order-worker   ]     {
[start:order-worker   ]       "sku": "Nike Air Force Ones",
[start:order-worker   ]       "quantity": 3
[start:order-worker   ]     }
[start:order-worker   ]   ],
[start:order-worker   ]   "location": "store",
[start:order-worker   ]   "status": "pending"
[start:order-worker   ] } {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'fulfill-A2-1750783972664:1',
[start:order-worker   ]   runId: '6261a3a1-5840-4471-a1ca-e0be9afa9465',
[start:order-worker   ]   workflowType: 'fulfill'
[start:order-worker   ] }
[start:order-worker   ] 2025-06-24T16:52:58.018Z [INFO] charge: workflowId: charge-fulfill-A2-1750783972664:1-01bb1c8f-6a00-4743-8247-ebdb4b84fe48 {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'fulfill-A2-1750783972664:1',
[start:order-worker   ]   runId: '6261a3a1-5840-4471-a1ca-e0be9afa9465',
[start:order-worker   ]   workflowType: 'fulfill'
[start:order-worker   ] }
[dev:next             ] Debugger attached.
[start:billing-worker ] 2025-06-24T16:52:58.320Z [INFO] charge({"customerId":"1234","reference":"01bb1c8f-6a00-4743-8247-ebdb4b84fe48","items":[{"sku":"Nike Air Force Ones","quantity":3}],"idempotencyKey":"01bb1c8f-6a00-4743-8247-ebdb4b84fe48"}): {"invoiceReference":"01bb1c8f-6a00-4743-8247-ebdb4b84fe48","subTotal":32388,"shipping":1686,"tax":6477,"total":38865} {
[start:billing-worker ]   sdkComponent: 'workflow',
[start:billing-worker ]   taskQueue: 'billing',
[start:billing-worker ]   namespace: 'default',
[start:billing-worker ]   workflowId: 'charge-fulfill-A2-1750783972664:1-01bb1c8f-6a00-4743-8247-ebdb4b84fe48',
[start:billing-worker ]   runId: '569f3f15-1f60-4df5-8aae-a0a3e4f45b92',
[start:billing-worker ]   workflowType: 'charge'
[start:billing-worker ] }
[start:billing-worker ] 2025-06-24T16:52:58.331Z [INFO] charge({"customerId":"1234","reference":"85154483-fc80-4619-ad22-6daa996cdb65","items":[{"sku":"Reebok Classic Leather White","quantity":1},{"sku":"New Balance 574","quantity":1}],"idempotencyKey":"85154483-fc80-4619-ad22-6daa996cdb65"}): {"invoiceReference":"85154483-fc80-4619-ad22-6daa996cdb65","subTotal":15770,"shipping":1617,"tax":3153,"total":18923} {
[start:billing-worker ]   sdkComponent: 'workflow',
[start:billing-worker ]   taskQueue: 'billing',
[start:billing-worker ]   namespace: 'default',
[start:billing-worker ]   workflowId: 'charge-fulfill-A2-1750783972664:2-85154483-fc80-4619-ad22-6daa996cdb65',
[start:billing-worker ]   runId: '4e38988c-456a-4677-8bc7-1dcdfdcae458',
[start:billing-worker ]   workflowType: 'charge'
[start:billing-worker ] }
[start:order-worker   ] 2025-06-24T16:52:58.438Z [INFO] charge workflow result: {"invoiceReference":"01bb1c8f-6a00-4743-8247-ebdb4b84fe48","subTotal":32388,"shipping":1686,"tax":6477,"total":38865,"success":true,"authCode":"123456789"} {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'fulfill-A2-1750783972664:1',
[start:order-worker   ]   runId: '6261a3a1-5840-4471-a1ca-e0be9afa9465',
[start:order-worker   ]   workflowType: 'fulfill'
[start:order-worker   ] }
[start:order-worker   ] 2025-06-24T16:52:58.438Z [INFO] processShipment: {
[start:order-worker   ]   "orderId": "A2-1750783972664",
[start:order-worker   ]   "customerId": "1234",
[start:order-worker   ]   "id": "A2-1750783972664:1",
[start:order-worker   ]   "items": [
[start:order-worker   ]     {
[start:order-worker   ]       "sku": "Nike Air Force Ones",
[start:order-worker   ]       "quantity": 3
[start:order-worker   ]     }
[start:order-worker   ]   ],
[start:order-worker   ]   "location": "store",
[start:order-worker   ]   "status": "pending"
[start:order-worker   ] } {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'fulfill-A2-1750783972664:1',
[start:order-worker   ]   runId: '6261a3a1-5840-4471-a1ca-e0be9afa9465',
[start:order-worker   ]   workflowType: 'fulfill'
[start:order-worker   ] }
[start:order-worker   ] 2025-06-24T16:52:58.438Z [INFO] shipmentInput: {
[start:order-worker   ]   "requestorWorkflowId": "fulfill-A2-1750783972664:1",
[start:order-worker   ]   "id": "A2-1750783972664:1",
[start:order-worker   ]   "items": [
[start:order-worker   ]     {
[start:order-worker   ]       "sku": "Nike Air Force Ones",
[start:order-worker   ]       "quantity": 3
[start:order-worker   ]     }
[start:order-worker   ]   ]
[start:order-worker   ] } {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'fulfill-A2-1750783972664:1',
[start:order-worker   ]   runId: '6261a3a1-5840-4471-a1ca-e0be9afa9465',
[start:order-worker   ]   workflowType: 'fulfill'
[start:order-worker   ] }
[start:order-worker   ] 2025-06-24T16:52:58.438Z [INFO] ship: workflowId: ship-A2-1750783972664:1 {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'fulfill-A2-1750783972664:1',
[start:order-worker   ]   runId: '6261a3a1-5840-4471-a1ca-e0be9afa9465',
[start:order-worker   ]   workflowType: 'fulfill'
[start:order-worker   ] }
[start:order-worker   ] 2025-06-24T16:52:58.441Z [INFO] charge workflow result: {"invoiceReference":"85154483-fc80-4619-ad22-6daa996cdb65","subTotal":15770,"shipping":1617,"tax":3153,"total":18923,"success":true,"authCode":"123456789"} {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'fulfill-A2-1750783972664:2',
[start:order-worker   ]   runId: 'c53d9f34-c943-4850-98ce-de497a5ec93b',
[start:order-worker   ]   workflowType: 'fulfill'
[start:order-worker   ] }
[start:order-worker   ] 2025-06-24T16:52:58.441Z [INFO] processShipment: {
[start:order-worker   ]   "orderId": "A2-1750783972664",
[start:order-worker   ]   "customerId": "1234",
[start:order-worker   ]   "id": "A2-1750783972664:2",
[start:order-worker   ]   "items": [
[start:order-worker   ]     {
[start:order-worker   ]       "sku": "Reebok Classic Leather White",
[start:order-worker   ]       "quantity": 1
[start:order-worker   ]     },
[start:order-worker   ]     {
[start:order-worker   ]       "sku": "New Balance 574",
[start:order-worker   ]       "quantity": 1
[start:order-worker   ]     }
[start:order-worker   ]   ],
[start:order-worker   ]   "location": "warehouse",
[start:order-worker   ]   "status": "pending"
[start:order-worker   ] } {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'fulfill-A2-1750783972664:2',
[start:order-worker   ]   runId: 'c53d9f34-c943-4850-98ce-de497a5ec93b',
[start:order-worker   ]   workflowType: 'fulfill'
[start:order-worker   ] }
[start:order-worker   ] 2025-06-24T16:52:58.441Z [INFO] shipmentInput: {
[start:order-worker   ]   "requestorWorkflowId": "fulfill-A2-1750783972664:2",
[start:order-worker   ]   "id": "A2-1750783972664:2",
[start:order-worker   ]   "items": [
[start:order-worker   ]     {
[start:order-worker   ]       "sku": "Reebok Classic Leather White",
[start:order-worker   ]       "quantity": 1
[start:order-worker   ]     },
[start:order-worker   ]     {
[start:order-worker   ]       "sku": "New Balance 574",
[start:order-worker   ]       "quantity": 1
[start:order-worker   ]     }
[start:order-worker   ]   ]
[start:order-worker   ] } {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'fulfill-A2-1750783972664:2',
[start:order-worker   ]   runId: 'c53d9f34-c943-4850-98ce-de497a5ec93b',
[start:order-worker   ]   workflowType: 'fulfill'
[start:order-worker   ] }
[start:order-worker   ] 2025-06-24T16:52:58.442Z [INFO] ship: workflowId: ship-A2-1750783972664:2 {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'fulfill-A2-1750783972664:2',
[start:order-worker   ]   runId: 'c53d9f34-c943-4850-98ce-de497a5ec93b',
[start:order-worker   ]   workflowType: 'fulfill'
[start:order-worker   ] }
[start:shipment-worker] 2025-06-24T16:52:58.691Z [INFO] ship: {
[start:shipment-worker]   "requestorWorkflowId": "fulfill-A2-1750783972664:1",
[start:shipment-worker]   "id": "A2-1750783972664:1",
[start:shipment-worker]   "items": [
[start:shipment-worker]     {
[start:shipment-worker]       "sku": "Nike Air Force Ones",
[start:shipment-worker]       "quantity": 3
[start:shipment-worker]     }
[start:shipment-worker]   ]
[start:shipment-worker] } {
[start:shipment-worker]   sdkComponent: 'workflow',
[start:shipment-worker]   taskQueue: 'shipments',
[start:shipment-worker]   namespace: 'default',
[start:shipment-worker]   workflowId: 'ship-A2-1750783972664:1',
[start:shipment-worker]   runId: 'c74a9ff4-3412-4ef3-9f78-0cc0adb74902',
[start:shipment-worker]   workflowType: 'ship'
[start:shipment-worker] }
[start:shipment-worker] 2025-06-24T16:52:58.692Z [INFO] ship: {
[start:shipment-worker]   "requestorWorkflowId": "fulfill-A2-1750783972664:2",
[start:shipment-worker]   "id": "A2-1750783972664:2",
[start:shipment-worker]   "items": [
[start:shipment-worker]     {
[start:shipment-worker]       "sku": "Reebok Classic Leather White",
[start:shipment-worker]       "quantity": 1
[start:shipment-worker]     },
[start:shipment-worker]     {
[start:shipment-worker]       "sku": "New Balance 574",
[start:shipment-worker]       "quantity": 1
[start:shipment-worker]     }
[start:shipment-worker]   ]
[start:shipment-worker] } {
[start:shipment-worker]   sdkComponent: 'workflow',
[start:shipment-worker]   taskQueue: 'shipments',
[start:shipment-worker]   namespace: 'default',
[start:shipment-worker]   workflowId: 'ship-A2-1750783972664:2',
[start:shipment-worker]   runId: 'ed49d5a3-e60a-43fd-9721-9492aec2311a',
[start:shipment-worker]   workflowType: 'ship'
[start:shipment-worker] }
[dev:next             ] Waiting for the debugger to disconnect...
[dev:next             ]  GET /orders/A1-1750783449972 200 in 268ms
[dev:next             ] Debugger attached.
[dev:next             ] Fetched order: {
[dev:next             ]   "id": "A1-1750783449972",
[dev:next             ]   "customerId": "1234",
[dev:next             ]   "items": [
[dev:next             ]     {
[dev:next             ]       "sku": "Vans Old Skool",
[dev:next             ]       "quantity": 1
[dev:next             ]     }
[dev:next             ]   ],
[dev:next             ]   "receivedAt": "2025-06-24T16:44:13.505Z",
[dev:next             ]   "status": "pending",
[dev:next             ]   "fulfillments": [
[dev:next             ]     {
[dev:next             ]       "orderId": "A1-1750783449972",
[dev:next             ]       "customerId": "1234",
[dev:next             ]       "id": "A1-1750783449972:1",
[dev:next             ]       "items": [
[dev:next             ]         {
[dev:next             ]           "sku": "Vans Old Skool",
[dev:next             ]           "quantity": 1
[dev:next             ]         }
[dev:next             ]       ],
[dev:next             ]       "location": "store",
[dev:next             ]       "status": "pending"
[dev:next             ]     }
[dev:next             ]   ]
[dev:next             ] }
[dev:next             ]  POST /orders/A1-1750783449972 200 in 131ms
[dev:next             ] Waiting for the debugger to disconnect...
[dev:next             ]  GET /orders/new 200 in 295ms
[dev:next             ]  GET /shipments 200 in 222ms
[dev:next             ]  POST /shipments 200 in 67ms
[dev:next             ]  GET /shipments 200 in 274ms
[dev:next             ]  POST /shipments 200 in 107ms
[dev:next             ]  GET /shipments/A2-1750783972664:1 200 in 222ms
[dev:next             ] Debugger attached.
[dev:next             ] Fetched shipment: {
[dev:next             ]   "workflowId": "ship-A2-1750783972664:1",
[dev:next             ]   "id": "A2-1750783972664:1",
[dev:next             ]   "items": [
[dev:next             ]     {
[dev:next             ]       "sku": "Nike Air Force Ones",
[dev:next             ]       "quantity": 3
[dev:next             ]     }
[dev:next             ]   ],
[dev:next             ]   "status": "booked",
[dev:next             ]   "updatedAt": "[object Temporal.Now]"
[dev:next             ] }
[dev:next             ]  POST /shipments/A2-1750783972664:1 200 in 97ms
[dev:next             ] Waiting for the debugger to disconnect...
[dev:next             ]  POST /shipments/A2-1750783972664:1 200 in 42ms
[start:shipment-worker] 2025-06-24T16:53:36.030Z [INFO] Shipment status updated: dispatched {
[start:shipment-worker]   sdkComponent: 'workflow',
[start:shipment-worker]   taskQueue: 'shipments',
[start:shipment-worker]   namespace: 'default',
[start:shipment-worker]   workflowId: 'ship-A2-1750783972664:1',
[start:shipment-worker]   runId: 'c74a9ff4-3412-4ef3-9f78-0cc0adb74902',
[start:shipment-worker]   workflowType: 'ship'
[start:shipment-worker] }
[dev:next             ] Fetched shipment: {
[dev:next             ]   "workflowId": "ship-A2-1750783972664:1",
[dev:next             ]   "id": "A2-1750783972664:1",
[dev:next             ]   "items": [
[dev:next             ]     {
[dev:next             ]       "sku": "Nike Air Force Ones",
[dev:next             ]       "quantity": 3
[dev:next             ]     }
[dev:next             ]   ],
[dev:next             ]   "status": "dispatched",
[dev:next             ]   "updatedAt": "[object Temporal.Now]"
[dev:next             ] }
[dev:next             ]  POST /shipments/A2-1750783972664:1 200 in 97ms
[dev:next             ] Debugger attached.
[dev:next             ]  POST /shipments/A2-1750783972664:1 200 in 32ms
[start:shipment-worker] 2025-06-24T16:53:37.187Z [INFO] Shipment status updated: delivered {
[start:shipment-worker]   sdkComponent: 'workflow',
[start:shipment-worker]   taskQueue: 'shipments',
[start:shipment-worker]   namespace: 'default',
[start:shipment-worker]   workflowId: 'ship-A2-1750783972664:1',
[start:shipment-worker]   runId: 'c74a9ff4-3412-4ef3-9f78-0cc0adb74902',
[start:shipment-worker]   workflowType: 'ship'
[start:shipment-worker] }
[start:shipment-worker] 2025-06-24T16:53:37.187Z [INFO] shipment delivered {
[start:shipment-worker]   sdkComponent: 'workflow',
[start:shipment-worker]   taskQueue: 'shipments',
[start:shipment-worker]   namespace: 'default',
[start:shipment-worker]   workflowId: 'ship-A2-1750783972664:1',
[start:shipment-worker]   runId: 'c74a9ff4-3412-4ef3-9f78-0cc0adb74902',
[start:shipment-worker]   workflowType: 'ship'
[start:shipment-worker] }
[start:order-worker   ] 2025-06-24T16:53:37.220Z [INFO] shipment workflow result: {"courierReference":"A2-1750783972664:1:1234"} {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'fulfill-A2-1750783972664:1',
[start:order-worker   ]   runId: '6261a3a1-5840-4471-a1ca-e0be9afa9465',
[start:order-worker   ]   workflowType: 'fulfill'
[start:order-worker   ] }
[start:order-worker   ] 2025-06-24T16:53:37.220Z [INFO] Fulfillment A2-1750783972664:1 processed successfully {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'fulfill-A2-1750783972664:1',
[start:order-worker   ]   runId: '6261a3a1-5840-4471-a1ca-e0be9afa9465',
[start:order-worker   ]   workflowType: 'fulfill'
[start:order-worker   ] }
[dev:next             ] Fetched shipment: {
[dev:next             ]   "workflowId": "ship-A2-1750783972664:1",
[dev:next             ]   "id": "A2-1750783972664:1",
[dev:next             ]   "items": [
[dev:next             ]     {
[dev:next             ]       "sku": "Nike Air Force Ones",
[dev:next             ]       "quantity": 3
[dev:next             ]     }
[dev:next             ]   ],
[dev:next             ]   "status": "delivered",
[dev:next             ]   "updatedAt": "[object Temporal.Now]"
[dev:next             ] }
[dev:next             ]  POST /shipments/A2-1750783972664:1 200 in 125ms
[start:order-worker   ] 2025-06-24T16:53:37.260Z [INFO] Fulfillment workflow completed for: A2-1750783972664:1, result: Fulfillment A2-1750783972664:1 processed successfully {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'A2-1750783972664',
[start:order-worker   ]   runId: 'b1db16bb-11ba-427c-94f9-1bdf4b060598',
[start:order-worker   ]   workflowType: 'order'
[start:order-worker   ] }
[start:shipment-worker] 2025-06-24T16:53:37.259890Z  WARN temporal_sdk_core::worker::activities: Activity not found on completion. This may happen if the activity has already been cancelled but completed anyway. task_token=TaskToken(CiQ2MTEyM2U3OC01NjZlLTQwOWYtYTczOC1lNDMxOTVlZmU2MDkSF3NoaXAtQTItMTc1MDc4Mzk3MjY2NDoxGiRjNzRhOWZmNC0zNDEyLTRlZjMtOWY3OC0wY2MwYWRiNzQ5MDIgKSgBMgE0QhR1cGRhdGVTaGlwbWVudFN0YXR1c0oICAEQ34ZAGAE=) details=Status { code: NotFound, message: "workflow execution already completed", details: b"\x08\x05\x12$workflow execution already completed\x1aB\n@type.googleapis.com/temporal.api.errordetails.v1.NotFoundFailure", metadata: MetadataMap { headers: {"content-type": "application/grpc"} }, source: None }
[dev:next             ] Waiting for the debugger to disconnect...
[dev:next             ]  GET /shipments 200 in 227ms
[dev:next             ]  POST /shipments 200 in 229ms
[dev:next             ]  GET /shipments/A2-1750783972664:2 200 in 178ms
[dev:next             ] Debugger attached.
[dev:next             ] Fetched shipment: {
[dev:next             ]   "workflowId": "ship-A2-1750783972664:2",
[dev:next             ]   "id": "A2-1750783972664:2",
[dev:next             ]   "items": [
[dev:next             ]     {
[dev:next             ]       "sku": "Reebok Classic Leather White",
[dev:next             ]       "quantity": 1
[dev:next             ]     },
[dev:next             ]     {
[dev:next             ]       "sku": "New Balance 574",
[dev:next             ]       "quantity": 1
[dev:next             ]     }
[dev:next             ]   ],
[dev:next             ]   "status": "booked",
[dev:next             ]   "updatedAt": "[object Temporal.Now]"
[dev:next             ] }
[dev:next             ]  POST /shipments/A2-1750783972664:2 200 in 78ms
[dev:next             ] Waiting for the debugger to disconnect...
[dev:next             ]  POST /shipments/A2-1750783972664:2 200 in 37ms
[start:shipment-worker] 2025-06-24T16:53:51.781Z [INFO] Shipment status updated: dispatched {
[start:shipment-worker]   sdkComponent: 'workflow',
[start:shipment-worker]   taskQueue: 'shipments',
[start:shipment-worker]   namespace: 'default',
[start:shipment-worker]   workflowId: 'ship-A2-1750783972664:2',
[start:shipment-worker]   runId: 'ed49d5a3-e60a-43fd-9721-9492aec2311a',
[start:shipment-worker]   workflowType: 'ship'
[start:shipment-worker] }
[dev:next             ] Fetched shipment: {
[dev:next             ]   "workflowId": "ship-A2-1750783972664:2",
[dev:next             ]   "id": "A2-1750783972664:2",
[dev:next             ]   "items": [
[dev:next             ]     {
[dev:next             ]       "sku": "Reebok Classic Leather White",
[dev:next             ]       "quantity": 1
[dev:next             ]     },
[dev:next             ]     {
[dev:next             ]       "sku": "New Balance 574",
[dev:next             ]       "quantity": 1
[dev:next             ]     }
[dev:next             ]   ],
[dev:next             ]   "status": "dispatched",
[dev:next             ]   "updatedAt": "[object Temporal.Now]"
[dev:next             ] }
[dev:next             ]  POST /shipments/A2-1750783972664:2 200 in 105ms
[dev:next             ] Debugger attached.
[dev:next             ]  POST /shipments/A2-1750783972664:2 200 in 41ms
[start:shipment-worker] 2025-06-24T16:53:52.696Z [INFO] Shipment status updated: delivered {
[start:shipment-worker]   sdkComponent: 'workflow',
[start:shipment-worker]   taskQueue: 'shipments',
[start:shipment-worker]   namespace: 'default',
[start:shipment-worker]   workflowId: 'ship-A2-1750783972664:2',
[start:shipment-worker]   runId: 'ed49d5a3-e60a-43fd-9721-9492aec2311a',
[start:shipment-worker]   workflowType: 'ship'
[start:shipment-worker] }
[start:shipment-worker] 2025-06-24T16:53:52.696Z [INFO] shipment delivered {
[start:shipment-worker]   sdkComponent: 'workflow',
[start:shipment-worker]   taskQueue: 'shipments',
[start:shipment-worker]   namespace: 'default',
[start:shipment-worker]   workflowId: 'ship-A2-1750783972664:2',
[start:shipment-worker]   runId: 'ed49d5a3-e60a-43fd-9721-9492aec2311a',
[start:shipment-worker]   workflowType: 'ship'
[start:shipment-worker] }
[dev:next             ] Fetched shipment: {
[dev:next             ]   "workflowId": "ship-A2-1750783972664:2",
[dev:next             ]   "id": "A2-1750783972664:2",
[dev:next             ]   "items": [
[dev:next             ]     {
[dev:next             ]       "sku": "Reebok Classic Leather White",
[dev:next             ]       "quantity": 1
[dev:next             ]     },
[dev:next             ]     {
[dev:next             ]       "sku": "New Balance 574",
[dev:next             ]       "quantity": 1
[dev:next             ]     }
[dev:next             ]   ],
[dev:next             ]   "status": "delivered",
[dev:next             ]   "updatedAt": "[object Temporal.Now]"
[dev:next             ] }
[dev:next             ]  POST /shipments/A2-1750783972664:2 200 in 89ms
[start:order-worker   ] 2025-06-24T16:53:52.744Z [INFO] shipment workflow result: {"courierReference":"A2-1750783972664:2:1234"} {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'fulfill-A2-1750783972664:2',
[start:order-worker   ]   runId: 'c53d9f34-c943-4850-98ce-de497a5ec93b',
[start:order-worker   ]   workflowType: 'fulfill'
[start:order-worker   ] }
[start:order-worker   ] 2025-06-24T16:53:52.744Z [INFO] Fulfillment A2-1750783972664:2 processed successfully {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'fulfill-A2-1750783972664:2',
[start:order-worker   ]   runId: 'c53d9f34-c943-4850-98ce-de497a5ec93b',
[start:order-worker   ]   workflowType: 'fulfill'
[start:order-worker   ] }
[start:shipment-worker] 2025-06-24T16:53:52.764147Z  WARN temporal_sdk_core::worker::activities: Activity not found on completion. This may happen if the activity has already been cancelled but completed anyway. task_token=TaskToken(CiQ2MTEyM2U3OC01NjZlLTQwOWYtYTczOC1lNDMxOTVlZmU2MDkSF3NoaXAtQTItMTc1MDc4Mzk3MjY2NDoyGiRlZDQ5ZDVhMy1lNjBhLTQzZmQtOTcyMS05NDkyYWVjMjMxMWEgKSgBMgE0QhR1cGRhdGVTaGlwbWVudFN0YXR1c0oICAEQ0IdAGAE=) details=Status { code: NotFound, message: "workflow execution already completed", details: b"\x08\x05\x12$workflow execution already completed\x1aB\n@type.googleapis.com/temporal.api.errordetails.v1.NotFoundFailure", metadata: MetadataMap { headers: {"content-type": "application/grpc"} }, source: None }
[start:order-worker   ] 2025-06-24T16:53:52.790Z [INFO] Fulfillment workflow completed for: A2-1750783972664:2, result: Fulfillment A2-1750783972664:2 processed successfully {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'A2-1750783972664',
[start:order-worker   ]   runId: 'b1db16bb-11ba-427c-94f9-1bdf4b060598',
[start:order-worker   ]   workflowType: 'order'
[start:order-worker   ] }
[start:order-worker   ] 2025-06-24T16:53:52.790Z [INFO] Fulfillment results: [
[start:order-worker   ]   "Fulfillment A2-1750783972664:1 processed successfully",
[start:order-worker   ]   "Fulfillment A2-1750783972664:2 processed successfully"
[start:order-worker   ] ] {
[start:order-worker   ]   sdkComponent: 'workflow',
[start:order-worker   ]   taskQueue: 'orders',
[start:order-worker   ]   namespace: 'default',
[start:order-worker   ]   workflowId: 'A2-1750783972664',
[start:order-worker   ]   runId: 'b1db16bb-11ba-427c-94f9-1bdf4b060598',
[start:order-worker   ]   workflowType: 'order'
[start:order-worker   ] }
[dev:next             ] Waiting for the debugger to disconnect...
[dev:next             ]  GET /orders/new 200 in 53ms
[dev:next             ]  GET /orders 200 in 49ms
[dev:next             ]  POST /orders 200 in 230ms
[dev:next             ]  POST /orders 200 in 102ms
[dev:next             ]  GET /shipments 200 in 225ms
[dev:next             ]  POST /shipments 200 in 245ms
#+end_example

#+begin_src css
:root {
  --font-body: 'Kanit', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  --font-mono: 'Fira Mono', monospace;
  --color-bg-0: rgb(202, 216, 228);
  --color-bg-1: hsl(209, 36%, 86%);
  --color-bg-2: hsl(224, 44%, 95%);
  --color-bg-3: hsl(248, 48%, 95%);
  --color-theme-1: #080808;
  --color-theme-2: #366ee9;
  --color-text rgba(0, 0, 0, 0.7)
  --column-width: 42rem;
  --column-margin-top: 4rem;
  font-family: var(--font-body);
  color: var(--color-text);
}
#+end_src
